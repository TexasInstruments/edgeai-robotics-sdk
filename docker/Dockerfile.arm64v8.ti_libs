#  Copyright (C) 2021 Texas Instruments Incorporated - http://www.ti.com/
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#    Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
#
#    Neither the name of Texas Instruments Incorporated nor the names of
#    its contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ARG USE_PROXY
ARG HTTP_PROXY
ARG DEBIAN_FRONTEND=noninteractive
ARG TIVA_LIB_VER
ARG RPMSG_LIB_VER
ARG SOC_NAME
ARG ROS_DISTRO
ARG SDK_VER

#=========================================================================
FROM j7-ros-${ROS_DISTRO}-common:${SDK_VER} as base-0

#=========================================================================
FROM base-0 AS base-1
ARG USE_PROXY
ENV USE_PROXY=${USE_PROXY}
ARG HTTP_PROXY
ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTP_PROXY}

#=========================================================================
FROM base-${USE_PROXY}
ARG DEBIAN_FRONTEND
ARG TIVA_LIB_VER
ARG RPMSG_LIB_VER
ARG SOC_NAME
ARG IS_ROS2

# setup proxy settings
ADD setup_proxy.sh /root/
ADD proxy /root/proxy
RUN /root/setup_proxy.sh

# install vision_apps lib and DL runtime libs
COPY lib/*  /usr/lib/
COPY lib_gstreamer-1.0/* /usr/lib/aarch64-linux-gnu/gstreamer-1.0/
COPY include/processor_sdk /usr/include/processor_sdk
RUN ln -s /usr/lib/libtivision_apps.so.$TIVA_LIB_VER /usr/lib/libtivision_apps.so && \
    ln -s /usr/lib/libvx_tidl_rt.so.1.0 /usr/lib/libvx_tidl_rt.so && \
    ln -s /usr/lib/libti_rpmsg_char.so.$RPMSG_LIB_VER /usr/lib/libti_rpmsg_char.so.0 && \
    ln -s /usr/lib/libti_rpmsg_char.so.0 /usr/lib/libti_rpmsg_char.so

# install dl-inferer
ADD install_dl_inferer.sh /usr/bin/
RUN /usr/bin/install_dl_inferer.sh && \
    rm -rf /opt/edgeai-dl-inferer && \
    rm -rf /usr/include/dlpack

# install edgeai-tiovx-kernels
ENV SOC=$SOC_NAME
ADD install_tiovx_kernels.sh /usr/bin/
RUN /usr/bin/install_tiovx_kernels.sh && \
    rm -rf /opt/edgeai-tiovx-kernels

# install edgeai-tiovx-modules
ENV SOC=$SOC_NAME
ADD install_tiovx_modules.sh /usr/bin/
RUN /usr/bin/install_tiovx_modules.sh && \
    rm -rf /opt/edgeai-tiovx-modules

# install edgeai-gst-plugins
ADD install_gst_plugins.sh /usr/bin/
RUN /usr/bin/install_gst_plugins.sh && \
    rm -rf /opt/edgeai-gst-plugins

# install python modules for DL RT
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-gi && \
    python3 -m pip install PyYAML

# install ti-gpio-cpp
ADD install_ti_gpio_libs.sh /usr/bin/
RUN /usr/bin/install_ti_gpio_libs.sh

# add scripts
COPY entrypoint_arm64v8.sh /root/entrypoint.sh
ADD  ros_setup.sh /root/

# .profile and .bashrc
WORKDIR /root
RUN echo "if [ -n \"$BASH_VERSION\" ]; then"     >  .profile && \
    echo "    # include .bashrc if it exists"    >> .profile && \
    echo "    if [ -f \"$HOME/.bashrc\" ]; then" >> .profile && \
    echo "        . \"$HOME/.bashrc\""           >> .profile && \
    echo "    fi"                                >> .profile && \
    echo "fi"                                    >> .profile && \
    echo "#!/bin/bash"                           >  .bashrc  && \
    echo "export PS1=\"${debian_chroot:+($debian_chroot)}\u@j7-docker:\w\$ \"" >> .bashrc

# workdir for ROS apps
ARG PROJECT_HOME=j7ros_home
ENV WORK_DIR=/root/${PROJECT_HOME}
ENV ROS_WS=${WORK_DIR}/ros_ws
WORKDIR ${ROS_WS}

# setup entrypoint
ENTRYPOINT ["/root/entrypoint.sh"]

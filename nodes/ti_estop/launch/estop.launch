<launch>
    <!-- openVX Estop graph node -->
    <node pkg = "ti_estop" type = "estop" name = "estop" output = "screen" args = "" required = "true">

        <!-- Configuration file for the openVX CNN graph -->
        <rosparam file="$(find ti_estop)/config/params.yaml" subst_value="true" />

        <!-- Left input topic name to subscribe to -->
        <param name = "left_input_topic_name" value = "camera/left/image_raw"/>

        <!-- Right input topic name to subscribe to -->
        <param name = "right_input_topic_name" value = "camera/right/image_raw"/>

        <!-- Right camera parameter topic name to subscribe to -->
        <param name = "camera_info_topic" value = "camera/right/camera_info"/>

        <!-- Output topic name to publish to -->
        <param name = "semseg_cnn_out_image" value = "semseg_cnn/out_image"/>

        <!-- Output topic name to publish to -->
        <param name = "semseg_cnn_tensor_topic" value = "semseg_cnn/tensor"/>

        <!-- Output recitified image topic name to publish to -->
        <param name = "rectified_image_topic" value = "camera/right/image_rect_mono"/>

        <!-- Output bounding box topic name to publish to -->
        <param name = "bounding_box_topic" value = "detection3D/3dBB"/>

        <!-- Output disparit topic name to publish to -->
        <param name = "raw_disparity_topic_name" value = "camera/disparity/raw"/>

        <!-- Output OG map topic name to publish to -->
        <param name = "ogmap_topic_name" value = "detection3D/ogmap"/>

        <!-- Output EStop topic name to publish to -->
        <param name = "estop_topic_name" value = "detection3D/estop"/>

        <!-- Flag to indcate if the output should be published in RGB format -->
        <param name = "ssmap_output_rgb" value = "true"/>
    </node>

</launch>
